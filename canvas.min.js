let MIN_DOC_SIZE,ctx=null,canvas=null,width=0,height=0,mouseX=0,mouseY=0,bFill=!0,bStroke=!0,keys={},oldMouseX=0,oldMouseY=0,isPointerLocked=!1,mouseDirection={x:0,y:0},swipexDown=null;var swipeyDown=null;let swipePCEnable=!0,lastSwipe=null,isDevice={mobile:/iPhone|iPad|iPod|Android/i.test(navigator.userAgent),ios:/iPad|iPhone|iPod/.test(navigator.userAgent),android:/Android/.test(navigator.userAgent)};const line=(e,t,o,n)=>{ctx.beginPath(),ctx.moveTo(e,t),ctx.lineTo(o,n),bStroke&&ctx.stroke(),ctx.closePath()};function polyline(){if(arguments.length%2==0){ctx.beginPath(),arguments.length>0&&ctx.moveTo(arguments[0],arguments[1]);for(let e=2;e<arguments.length;e+=2){let t=arguments[e],o=arguments[e+1];ctx.lineTo(t,o)}bStroke&&ctx.stroke(),ctx.closePath()}else console.error("The function polyline must take an even number of arguments")}const circle=(e,t,o)=>{ctx.beginPath(),ctx.arc(e,t,o,0,2*Math.PI),bStroke&&ctx.stroke(),bFill&&ctx.fill(),ctx.closePath()},fillRect=(e,t,o,n)=>{ctx.fillRect(e,t,o,n)},rect=(e,t,o,n)=>{ctx.rect(e,t,o,n),bFill&&ctx.fill(),bStroke&&ctx.stroke()},text=(e,t,o)=>{ctx.fillText(e,t,o)},setFont=(e,t)=>{ctx.font=`${e} ${t}`},alignText=e=>{ctx.textAlign=["left","right","center","start","end"].indexOf(e)>-1?e:"left"},push=()=>{ctx.save()},pop=()=>{ctx.restore()},translate=(e,t)=>{ctx.translate(e,t)},rotate=e=>{ctx.rotate(radians(e))},noFill=()=>{bFill=!1},noStroke=()=>{bStroke=!1},stroke=e=>{ctx.strokeStyle=e,bStroke=!0},strokeWeight=e=>{ctx.lineWidth=e},linecap=e=>{ctx.lineCap=["butt","round","square"].indexOf(e)>-1?e:"butt"},fill=e=>{ctx.fillStyle=e,bFill=!0},clear=()=>{ctx.clearRect(0,0,canvas.width,canvas.height)},radians=e=>e*(Math.PI/180),angleToVector=e=>new Vector(Math.cos(e),Math.sin(e)),random=e=>Math.floor(Math.random()*e),dist=(e,t)=>Math.hypot(e.x-t.x,e.y-t.y),map=(e,t,o,n,s)=>(e-t)/(o-t)*(s-n)+n,getSwipe=()=>lastSwipe,isKeyDown=e=>keys[e],isKeyUp=e=>!keys[e],mouseDir=()=>isPointerLocked?mouseDirection:mouseX>oldMouseX&&mouseY>oldMouseY?"BOTTOM_RIGHT":mouseX>oldMouseX&&mouseY<oldMouseY?"TOP_RIGHT":mouseX<oldMouseX&&mouseY<oldMouseY?"TOP_LEFT":mouseX<oldMouseX&&mouseY>oldMouseY?"BOTTOM_LEFT":mouseX>oldMouseX&&mouseY==oldMouseY?"RIGHT":mouseX==oldMouseX&&mouseY>oldMouseY?"DOWN":mouseX==oldMouseX&&mouseY<oldMouseY?"UP":mouseX<oldMouseX&&mouseY==oldMouseY?"LEFT":null,enablePCswipe=e=>{swipePCEnable="boolean"!=typeof e||e,document.removeEventListener("mousedown",handleTouchStart,!1),document.removeEventListener("mousemove",handleTouchMove,!1)};function createCanvas(e,t,o="#000",n=!1){return null!=canvas&&(document.querySelector("#"+canvas.id).remove(),canvas=null,ctx=null),(canvas=document.createElement("canvas")).id="dynamic-canvas",canvas.width=e,canvas.height=t,canvas.style.background=o,document.body.appendChild(canvas),n&&(canvas.requestPointerLock=canvas.requestPointerLock||canvas.mozRequestPointerLock,document.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock,document.addEventListener("pointerlockchange",()=>{document.pointerLockElement===canvas&&document.mozPointerLockElement===canvas||(isPointerLocked=!1)},!1),canvas.onclick=(()=>{isPointerLocked||(canvas.requestPointerLock(),isPointerLocked=!0)})),width=e,height=t,ctx=canvas.getContext("2d"),canvas}let drawCond=()=>!0;function setDrawCondition(e=null){e&&(drawCond=e)}function drawLoop(){ctx&&"undefined"!=typeof draw&&drawCond()&&(clear(),draw()),requestAnimationFrame(drawLoop)}function handleTouchStart(e){const t=(t=>t.touches||[{clientX:e.clientX,clientY:e.clientY},null])(e)[0];swipexDown=t.clientX,swipeyDown=t.clientY}function handleTouchMove(e){if(!swipexDown||!swipeyDown)return;let t,o;e.touches?(t=e.touches[0].clientX,o=e.touches[0].clientY):(t=e.clientX,o=e.clientY);let n,s,i=swipexDown-t,a=swipeyDown-o;Math.abs(i)>Math.abs(a)?i>0?(s="left")&&(n=new CustomEvent("swipeleft",{detail:{swipe:"left"}})):(s="right")&&(n=new CustomEvent("swiperight",{detail:{swipe:"right"}})):a>0?(s="up")&&(n=new CustomEvent("swipeup",{detail:{swipe:"up"}})):(s="down")&&(n=new CustomEvent("swipedown",{detail:{swipe:"down"}})),canvas.dispatchEvent(n),lastSwipe=s,swipexDown=null,swipeyDown=null}window.onload=(e=>{MIN_DOC_SIZE=Math.min(document.documentElement.clientHeight,document.documentElement.clientWidth),"undefined"!=typeof setup&&setup(),canvas&&(canvas.onmousemove=(e=>{oldMouseX=mouseX,oldMouseY=mouseY,mouseX=e.clientX,mouseY=e.clientY,mouseDirection={x:e.movementX,y:e.movementY}}),canvas.addEventListener("touchstart",handleTouchStart,!1),canvas.addEventListener("touchmove",handleTouchMove,!1),swipePCEnable&&(canvas.addEventListener("mousedown",handleTouchStart,!1),canvas.addEventListener("mousemove",handleTouchMove,!1)),"undefined"!=typeof onSwipe&&(canvas.addEventListener("swipeleft",onSwipe,!1),canvas.addEventListener("swiperight",onSwipe,!1),canvas.addEventListener("swipeup",onSwipe,!1),canvas.addEventListener("swipedown",onSwipe,!1)),canvas.onmousemove=(e=>{"undefined"!=typeof mouseMove&&mouseMove(e)}),canvas.onmouseenter=(e=>{"undefined"!=typeof mouseEnter&&mouseEnter(e)}),canvas.onmouseleave=(e=>{"undefined"!=typeof mouseLeave&&mouseLeave(e)}),canvas.onmousewheel=(e=>{"undefined"!=typeof mouseWheel&&mouseWheel(e)})),window.onkeypress=(e=>{keys[e.code]=!0,"undefined"!=typeof keyPress&&keyPress(e)}),window.onkeydown=(e=>{keys[e.code]=!0,"undefined"!=typeof keyDown&&keyDown(e)}),window.onkeyup=(e=>{keys[e.code]=!1,"undefined"!=typeof keyUp&&keyUp(e)}),drawLoop()});class Vector{constructor(e,t){this.x=e,this.y=t}normalize(){var e=Math.sqrt(this.x*this.x+this.y*this.y);0!=e&&(this.x=this.x/e,this.y=this.y/e)}set(e,t){this.x=e,this.y=t}add(e){this.x+=e.x,this.y+=e.y}get mag(){return Math.hypot(this.x,this.y)}setMag(e){this.x=this.x*e/this.mag,this.y=this.y*e/this.mag}}